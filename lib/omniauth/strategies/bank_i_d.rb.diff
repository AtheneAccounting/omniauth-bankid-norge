--- bank_i_d.rb.new	2019-01-23 23:00:32.000000000 +0200
+++ bank_i_d.rb	2019-01-22 12:22:19.689918474 +0200
@@ -104,7 +104,7 @@
 
       def build_access_token_bankid(flow = 'authorization_code')
         opts = {
-          raise_errors: false,
+          raise_errors: true,
           parse: nil, 
           headers: {
             'Content-Type': 'application/x-www-form-urlencoded',
@@ -160,23 +160,15 @@
         elsif response.headers['content-type']&.include? 'application/pdf'
           response.body
         else
-          out = response.parsed
-          raise response.error unless out
-          out
+          response.parsed
         end
       end
 
       def client_request(method, url, options = {})
         begin
-           resp = client.request(:get, url, options)
-           case resp.status
-           when 400..599
-             #byebug resp.response.reason_phrase
-             resp.error = Error.new("#{resp&.response&.reason_phrase}, request url: #{url}")
-           end
-           resp
+           client.request(:get, url, options) 
         rescue StandardError => e
-          Rails.logger.error "BankID OIDC client error: #{e.message}, response status: #{resp.status}"
+          Rails.logger.error "BankID OIDC client error: #{e.message}"
           Rails.logger.error e.inspect
           nil
         end
@@ -184,7 +176,6 @@
 
       def bearer_request
         {
-          raise_errors: false,
           headers: {
             'Content-Type': 'application/x-www-form-urlencoded',
             'Authorization': "Bearer #{access_token.token}"
